class Solution {
public:
    vector<vector<int>> shiftGrid(vector<vector<int>>& grid, int k) {
        int m = grid.size();
        int n = grid[0].size();
        vector<int> temp;
        k =  k % (m*n);
        if(k == 0) return grid;
        bool flag = false;
        int x , y , i , j;
        for(x = m-1 ; x >= 0; x--){
            for(y = n-1 ; y >= 0; y--){
                temp.push_back(grid[x][y]);
                if(k == temp.size()){
                    flag = true;
                    y--;
                    break;
                }
                cout<<k<<"="<<temp.size()<<endl;
            }
            if(flag) break;
        }
        if(y == -1){
            y = n-1;
            x--;
        }
        flag = false;
        for(i = m-1 ; i >= 0; i--){
            for(j = n-1 ; j >= 0; j--){
                if(x == -1){flag = true;  break ;}
                grid[i][j] = grid[x][y--];
                if(y==-1){
                    y = n-1;
                    x--;
                }
            }
            if(flag) break;
        }
        for(x = 0 ; x<k ; x++){
            if(j==-1){
                j = n-1;
                i--;
            }
            grid[i][j--] = temp[x];
        }
        return grid;
    }
};